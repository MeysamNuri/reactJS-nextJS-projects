[{"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js":"2","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js":"4","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js":"5","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js":"7","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js":"8","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js":"9","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js":"10","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js":"11","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Header.js":"12","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js":"13","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js":"14","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js":"15"},{"size":379,"mtime":1609700679019,"results":"16","hashOfConfig":"17"},{"size":586,"mtime":1609954313477,"results":"18","hashOfConfig":"17"},{"size":139,"mtime":1609494765572,"results":"19","hashOfConfig":"17"},{"size":341,"mtime":1609954402764,"results":"20","hashOfConfig":"17"},{"size":390,"mtime":1609706536515,"results":"21","hashOfConfig":"17"},{"size":1972,"mtime":1609783271438,"results":"22","hashOfConfig":"17"},{"size":810,"mtime":1609707885027,"results":"23","hashOfConfig":"17"},{"size":2525,"mtime":1609788312119,"results":"24","hashOfConfig":"17"},{"size":1039,"mtime":1609787312238,"results":"25","hashOfConfig":"17"},{"size":2072,"mtime":1609965909886,"results":"26","hashOfConfig":"17"},{"size":1667,"mtime":1609965306070,"results":"27","hashOfConfig":"17"},{"size":468,"mtime":1609956026338,"results":"28","hashOfConfig":"17"},{"size":834,"mtime":1609959491575,"results":"29","hashOfConfig":"17"},{"size":297,"mtime":1609965970963,"results":"30","hashOfConfig":"17"},{"size":1695,"mtime":1609966056011,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"3wgz0z",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js",[],["67","68"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js",["69","70"],"import React from 'react';\r\nimport useStyle from './style'\r\nimport { ButtonBase, Grid, Typography } from '@material-ui/core'\r\n\r\nconst RightSidebar = () => {\r\n    const classes = useStyle()\r\n    const hashtags=[\r\n        \"پرچم_دار_جدید\",\r\n        \"ایران\",\r\n        \"پرچم_دار_جدید\",\r\n        \"ایران\",\r\n        \"پرچم_دار_جدید\",\r\n        \"ایران\",\r\n        \"پرچم_دار_جدید\",\r\n        \"ایران\",\r\n    ]\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className={classes.root}>\r\n\r\n                <Grid container direction={\"row\"} alignItems={\"center\"}>\r\n                    <Grid item>\r\n                        <img src={\"/images/Twitter.png\"} style={{ width: \"50px\" }} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component=\"h3\" className={classes.logoText}>\r\n\r\n                            تویتر فارسی\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Typography className={classes.hashtagTitle}>\r\n                    داغ ترین هشتگ ها\r\n                </Typography>\r\n                <Grid container direction={\"column\"} alignItems={\"center\"}>\r\n\r\n                    {\r\n                        hashtags.map(item=> <ButtonBase className={classes.hashtagparent}>\r\n                            <Grid item container alignItems={\"center\"}>\r\n                                 <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />\r\n                            <Typography className={classes.hashtag}>\r\n                               {item}\r\n                            </Typography>\r\n                             </Grid>\r\n                            </ButtonBase>\r\n                            )\r\n                    }\r\n                  \r\n\r\n                </Grid>\r\n\r\n               \r\n\r\n              \r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RightSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js",["71","72"],"import { ButtonBase, Divider, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from './style.js'\r\n\r\nconst tweetList = [\r\n    { name: \"Xiaomi\", id: \"Xiaomi@1234\", img: \"/images/b.jpg\" },\r\n    { name: \"asghar\", id: \"Xiaomi@ere\", img: \"/images/b.jpg\" },\r\n    { name: \"khorshid\", id: \"efefe@1234\", img: \"/images/b.jpg\" },\r\n    { name: \"honami\", id: \"Xiaomi@dffd\", img: \"/images/b.jpg\" },\r\n    { name: \"master\", id: \"Xiaomi@44333\", img: \"/images/b.jpg\" },\r\n]\r\nconst TwityerCom = ({ name, id, img }) => {\r\n    const classes = useStyle()\r\n    return <ButtonBase><Grid container direction={\"row\"} className={classes.tweeterParent}>\r\n        <img src={img} style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }} />\r\n\r\n        <Grid item container direction={\"column\"} className={classes.TweeterProftext}>\r\n            <Typography className={classes.profName}>{name} </Typography>\r\n            <Typography className={classes.profId}>{id}</Typography>\r\n        </Grid>\r\n        <Divider />\r\n    </Grid>\r\n    </ButtonBase>\r\n}\r\nconst LeftSidebar = () => {\r\n    const classes = useStyle()\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction={\"row-reverse\"}>\r\n                <img src={\"/images/m.jpg\"} style={{ width: \"100px\", height: \"100px\", borderRadius: \"50%\" }} />\r\n\r\n                <Grid item container direction={\"column\"} className={classes.userDetail}>\r\n                    <Typography className={classes.profName}>میثم نوری</Typography>\r\n                    <Typography className={classes.profId}> m.nuri.1992</Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Grid item container direction={\"column\"} className={classes.tweeter}>\r\n                <Typography className={classes.tweeterTitle}>\r\n                    بهترین خبرنگاران\r\n                </Typography>\r\n                <Divider />\r\n                {\r\n                    tweetList.map((item,index) => {\r\n                        return (\r\n                            <>\r\n                                <TwityerCom name={item.name} id={item.id} img={item.img} />\r\n                               {index !==tweetList.length -1 &&\r\n                                <Divider />\r\n                               }\r\n                               \r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js",["73"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js",["74"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Header.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js",["75","76"],"import { Button, Grid, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from './../style'\r\n\r\n\r\n\r\nconst NewTweet = () => {\r\n  const classes = useStyle()\r\n  return (\r\n\r\n    <div className={classes.NewTwett}>\r\n      <Grid container>\r\n        <img src={\"images/m.jpg\"} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n        <textarea className={classes.input} placeholder={\"توییت کن...\"} />\r\n      </Grid>\r\n      <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }}>\r\n        <Button variant={\"contained\"} color={\"primary\"} className={classes.ButtonStyle}>توییت</Button>\r\n        <IconButton>\r\n          <img src={\"images/22.png\"} className={classes.ButtonImg} />\r\n        </IconButton>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTweet;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js",["77","78"],"import { Typography, Grid, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from './../style'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nconst Tweet = ({datas}) => {\r\n    const classes = useStyle()\r\n    return (\r\n\r\n        <div className={classes.TweetItem}>\r\n            <Grid container >\r\n                    <img src={datas.sender.img} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n\r\n              \r\n                <Grid item container direction={\"column\"} style={{flex:1,marginRight:\"1rem\"}}>\r\n                    <Grid item container >\r\n                        <Typography className={classes.TweetItemName}>\r\n                           {datas.sender.name}\r\n                     </Typography>\r\n                        <Typography className={classes.TweetItemId}>\r\n                        {datas.sender.id}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Typography style={{marginTop:\".75rem\",fontSize:\"5px\"}}>\r\n                    {datas.text}\r\n\r\n\r\n                     </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }} alignItems={\"center\"}>\r\n                <IconButton>\r\n                    <img src={\"images/retweet.png\"} className={classes.ButtonImg} />\r\n                </IconButton>\r\n                <IconButton className={classes.favImg}>\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <Typography className={classes.Numbertweet}>{datas.likes}</Typography>\r\n            </Grid>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Tweet;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":25,"column":25,"nodeType":"85","endLine":25,"endColumn":86},{"ruleId":"83","severity":1,"message":"84","line":43,"column":34,"nodeType":"85","endLine":43,"endColumn":89},{"ruleId":"83","severity":1,"message":"84","line":15,"column":9,"nodeType":"85","endLine":15,"endColumn":89},{"ruleId":"83","severity":1,"message":"84","line":30,"column":17,"nodeType":"85","endLine":30,"endColumn":111},{"ruleId":"86","severity":1,"message":"87","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":1,"column":22,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":13,"column":9,"nodeType":"85","endLine":13,"endColumn":100},{"ruleId":"83","severity":1,"message":"84","line":19,"column":11,"nodeType":"85","endLine":19,"endColumn":70},{"ruleId":"83","severity":1,"message":"84","line":11,"column":21,"nodeType":"85","endLine":11,"endColumn":114},{"ruleId":"83","severity":1,"message":"84","line":33,"column":21,"nodeType":"85","endLine":33,"endColumn":85},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]