[{"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js":"2","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js":"4","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js":"5","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js":"7","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js":"8","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js":"9","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js":"10","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js":"11","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js":"12","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js":"13","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js":"14","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\HastagTweetList.js":"15","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\style.js":"16","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Header\\Header.js":"17","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\TweetsByUser\\index.js":"18","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Page404.js":"19","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api_tweets.js":"20","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api.js":"21"},{"size":379,"mtime":1609700679019,"results":"22","hashOfConfig":"23"},{"size":627,"mtime":1610654844697,"results":"24","hashOfConfig":"23"},{"size":802,"mtime":1610744974904,"results":"25","hashOfConfig":"23"},{"size":415,"mtime":1610216281450,"results":"26","hashOfConfig":"23"},{"size":390,"mtime":1609706536515,"results":"27","hashOfConfig":"23"},{"size":2213,"mtime":1610731718374,"results":"28","hashOfConfig":"23"},{"size":810,"mtime":1609707885027,"results":"29","hashOfConfig":"23"},{"size":2629,"mtime":1610731801363,"results":"30","hashOfConfig":"23"},{"size":1039,"mtime":1609787312238,"results":"31","hashOfConfig":"23"},{"size":881,"mtime":1610699559669,"results":"32","hashOfConfig":"23"},{"size":1632,"mtime":1610216276911,"results":"33","hashOfConfig":"23"},{"size":4990,"mtime":1610732248570,"results":"34","hashOfConfig":"23"},{"size":297,"mtime":1609965970963,"results":"35","hashOfConfig":"23"},{"size":1877,"mtime":1610658043094,"results":"36","hashOfConfig":"23"},{"size":975,"mtime":1610731455704,"results":"37","hashOfConfig":"23"},{"size":1632,"mtime":1610217615536,"results":"38","hashOfConfig":"23"},{"size":485,"mtime":1610217839507,"results":"39","hashOfConfig":"23"},{"size":1017,"mtime":1610729690704,"results":"40","hashOfConfig":"23"},{"size":222,"mtime":1610700745278,"results":"41","hashOfConfig":"23"},{"size":1051,"mtime":1610732139096,"results":"42","hashOfConfig":"23"},{"size":251,"mtime":1610730854639,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"3wgz0z",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js",[],["96","97"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js",["98","99"],"import React, { useEffect, useState } from 'react';\r\nimport useStyle from './style'\r\nimport { ButtonBase, Grid, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllHashtags } from '../../API/api_tweets';\r\n\r\nconst RightSidebar = () => {\r\n    const classes = useStyle()\r\n    const [hashtags,sethashtags]=useState([])\r\n\r\n    useEffect(()=>{\r\n        getAllHashtags((isok,data)=>{\r\n            if(!isok)\r\n            return(\"مشکلی پیش آمده\")\r\n            else sethashtags(data)\r\n        })\r\n    })\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className={classes.root}>\r\n\r\n           <Link to={\"/\"}>\r\n           \r\n           <Grid container direction={\"row\"} alignItems={\"center\"}>\r\n                    <Grid item>\r\n                        <img src={\"/images/Twitter.png\"} style={{ width: \"50px\" }} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component=\"h3\" className={classes.logoText}>\r\n\r\n                            تویتر فارسی\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n           </Link>\r\n                <Typography className={classes.hashtagTitle}>\r\n                    داغ ترین هشتگ ها\r\n                </Typography>\r\n                <Grid container direction={\"column\"} alignItems={\"center\"}>\r\n\r\n                    {\r\n                        hashtags.map(item=> <ButtonBase className={classes.hashtagparent}>\r\n                           <Link to={\"/hashtags/\"+item}>\r\n                           <Grid item container alignItems={\"center\"}>\r\n                                 <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />\r\n                            <Typography className={classes.hashtag}>\r\n                               {item}\r\n                            </Typography>\r\n                             </Grid>\r\n                           </Link>\r\n                            </ButtonBase>\r\n                            )\r\n                    }\r\n                  \r\n\r\n                </Grid>\r\n\r\n               \r\n\r\n              \r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RightSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js",["100","101","102"],"import React, { useEffect, useState } from 'react';\r\nimport { ButtonBase, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport useStyle from './style.js'\r\nimport { getAllUsers } from '../../API/api_tweets.js';\r\n\r\nconst TwityerCom = ({ name, id, img }) => {\r\n\r\n    const classes = useStyle()\r\n    return <ButtonBase style={{width:\"100%\"}}><Grid container direction={\"row\"} className={classes.tweeterParent}>\r\n        <img src={img} style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }} />\r\n\r\n        <Grid item container direction={\"column\"} className={classes.TweeterProftext}>\r\n            <Typography className={classes.profName}>{name} </Typography>\r\n            <Typography className={classes.profId}>{id}</Typography>\r\n        </Grid>\r\n        <Divider />\r\n    </Grid>\r\n    </ButtonBase>\r\n}\r\nconst LeftSidebar = () => {\r\n    const [users,setUsers]=useState([])\r\n\r\n    useEffect(()=>{\r\n        getAllUsers((isok,data)=>{\r\n            if(!isok)\r\n            return alert(data.message)\r\n            else setUsers(data)\r\n        })\r\n    },[])\r\n    const classes = useStyle()\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction={\"row-reverse\"}>\r\n                <img src={\"/images/m.jpg\"} style={{ width: \"100px\", height: \"100px\", borderRadius: \"50%\" }} />\r\n\r\n                <Grid item container direction={\"column\"} className={classes.userDetail}>\r\n                    <Typography className={classes.profName}>میثم نوری</Typography>\r\n                    <Typography className={classes.profId}> m.nuri.1992</Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Grid item container direction={\"column\"} className={classes.tweeter}>\r\n                <Typography className={classes.tweeterTitle}>\r\n                    بهترین خبرنگاران\r\n                </Typography>\r\n                <Divider />\r\n                {\r\n                    users.map((item,index) => {\r\n                        return (\r\n                            <>\r\n                            <Link to={`/users/${item.name}`}>\r\n                                <TwityerCom name={item.name} id={item.id} img={item.img} />\r\n                               {index !==users.length -1 &&\r\n                                <Divider />\r\n                               }\r\n                               </Link>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js",["103"],"import { makeStyles, ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst useStyle=makeStyles(them=>({\r\n\r\n    root:{\r\n        backgroundColor:'#eee',\r\n      \r\n    },\r\n    divider:{\r\n        backgroundColor:\"#7ebaff\",\r\n        filter:\"opacity(.8px)\"\r\n    },\r\n    header:{\r\n        backgroundColor:'white',\r\n        display:\"flex\",\r\n        padding:18,\r\n    },\r\n    headerTitle:{\r\n       \r\n     \r\n        marginRight:\"10px\",\r\n        fontWeight:\"600\",\r\n        fontSize:\"20px !important\" \r\n\r\n    },\r\n    NewTwett:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n    },\r\n    TweetItem:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n        marginTop:\".5rem\",\r\n\r\n    },\r\n    TweetItemName:{\r\n        fontSize:\"20px\",\r\nfontWeight:600,\r\nmarginRight:\"10px\"\r\n    },\r\n    favImg:{\r\nborder:\"1px solid\",\r\nmarginBottom: \"15px\",\r\nmarginRight: \"10px\",\r\npadding: \"7px\"\r\n    },\r\n    Numbertweet:{\r\ncolor:them.palette.text.hint,\r\nfontSize:\".4rem\"\r\n    },\r\n    TweetItemId:{\r\n        fontSize:\".9rem\",\r\n        color:them.palette.text.hint,\r\n        marginRight:\"15px\"\r\n\r\n    },\r\n    input:{\r\n        border:\"none\",\r\n        flex:1,\r\n        marginRight:\"1rem\",\r\n        \"&:focus\":{outline:\"none\"}\r\n    },\r\n    ButtonStyle:{\r\n        color:\"white\",\r\n        borderRadius:\"20px\",\r\n        padding:\"20px !important\",\r\n        height:\"30px\",\r\n        lineHeight:\"1rem\",\r\n        fontSize:\"20px\",\r\n        fontFamily:\"Shabnam\"\r\n    },\r\n    ButtonImg:{\r\n        marginTop: \"-14px\"\r\n    }\r\n\r\n}))\r\nexport default useStyle","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js",["104","105","106","107","108","109"],"import { Button, Grid, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useStyle from './../style'\r\nimport classnames from 'classnames'\r\nimport Axios from 'axios';\r\nimport { newTweetRequest } from '../../../API/api_tweets';\r\n\r\n\r\nconst NewTweet = () => {\r\n//Namespace management idea from http://enterprisejquery.com/2010/10/how-good-c-habits-can-encourage-bad-javascript-habits-part-1/\r\n(function( cursorManager ) {\r\n\r\n  //From: http://www.w3.org/TR/html-markup/syntax.html#syntax-elements\r\n  var voidNodeTags = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'MENUITEM', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR', 'BASEFONT', 'BGSOUND', 'FRAME', 'ISINDEX'];\r\n\r\n  //From: https://stackoverflow.com/questions/237104/array-containsobj-in-javascript\r\n  Array.prototype.contains = function(obj) {\r\n      var i = this.length;\r\n      while (i--) {\r\n          if (this[i] === obj) {\r\n              return true;\r\n          }\r\n      }\r\n      return false;\r\n  }\r\n\r\n  //Basic idea from: https://stackoverflow.com/questions/19790442/test-if-an-element-can-contain-text\r\n  function canContainText(node) {\r\n      if(node.nodeType == 1) { //is an element node\r\n          return !voidNodeTags.contains(node.nodeName);\r\n      } else { //is not an element node\r\n          return false;\r\n      }\r\n  };\r\n\r\n  function getLastChildElement(el){\r\n      var lc = el.lastChild;\r\n      while(lc && lc.nodeType != 1) {\r\n          if(lc.previousSibling)\r\n              lc = lc.previousSibling;\r\n          else\r\n              break;\r\n      }\r\n      return lc;\r\n  }\r\n\r\n  //Based on Nico Burns's answer\r\n  cursorManager.setEndOfContenteditable = function(contentEditableElement)\r\n  {\r\n\r\n      while(getLastChildElement(contentEditableElement) &&\r\n            canContainText(getLastChildElement(contentEditableElement))) {\r\n          contentEditableElement = getLastChildElement(contentEditableElement);\r\n      }\r\n\r\n      var range,selection;\r\n      if(document.createRange)//Firefox, Chrome, Opera, Safari, IE 9+\r\n      {    \r\n          range = document.createRange();//Create a range (a range is a like the selection but invisible)\r\n          range.selectNodeContents(contentEditableElement);//Select the entire contents of the element with the range\r\n          range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\r\n          selection = window.getSelection();//get the selection object (allows you to change selection)\r\n          selection.removeAllRanges();//remove any selections already made\r\n          selection.addRange(range);//make the range you have just created the visible selection\r\n      }\r\n      else if(document.selection)//IE 8 and lower\r\n      { \r\n          range = document.body.createTextRange();//Create a range (a range is a like the selection but invisible)\r\n          range.moveToElementText(contentEditableElement);//Select the entire contents of the element with the range\r\n          range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\r\n          range.select();//Select the range (make it the visible selection\r\n      }\r\n  }\r\n\r\n}( window.cursorManager = window.cursorManager || {}));\r\n\r\n  const classes = useStyle()\r\n  const [Tweet, setTweet] = useState()\r\n\r\n\r\n\r\n  const input = React.useRef()\r\n\r\n  const renderTweet=(text)=>{\r\n\r\n    return {__html:text.replace( /#\\S+/g , \"<span href='/tags/$&' style='color:blue'>$&</span>\" )}\r\n    }\r\n  useEffect(() => {\r\n    input.current.addEventListener(\"input\", function(e) {\r\n      setTweet(renderTweet(e.target.innerText))\r\n      window.cursorManager.setEndOfContenteditable(e.target);\r\n    }, false)\r\n  }, [])\r\n\r\n  const newTweetHandler=()=>{\r\n    const newTeeetbyuser=input.current.innerText\r\n    const data=  {\r\n      id:Math.floor(Math.random()*1000),\r\n      \"sender\":{\r\n        \"name\": \"میثم نوری\", \"id\": \"Xiaomi@1234\", \"img\": \"/images/b.jpg\" \r\n      \r\n      },\r\n      \"text\":newTeeetbyuser,\r\n      \"likes\":0\r\n    }\r\n    newTweetRequest(data,(isok)=>{\r\n      if(!isok)\r\n      return alert(\"پیام ارسال نشد\")\r\n      else return alert(\"پیام ارسال شد\")\r\n    })\r\n  }\r\n  return (\r\n\r\n    <div className={classes.NewTwett}>\r\n      <Grid container>\r\n        <img src={\"images/m.jpg\"} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n        <div contentEditable className={classnames(classes.input, \"editable\")} data-placeholder=\"توییت کن...\" ref={input} dangerouslySetInnerHTML={Tweet} /> \r\n      </Grid>\r\n      <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }}>\r\n        <Button onClick={newTweetHandler} variant={\"contained\"} color={\"primary\"} className={classes.ButtonStyle}>توییت</Button>\r\n        <IconButton>\r\n          <img src={\"images/22.png\"} className={classes.ButtonImg} />\r\n        </IconButton>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTweet;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js",["110","111"],"import { Typography, Grid, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from './../style'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nconst Tweet = ({datas}) => {\r\n\r\n    const renderTweet=(text)=>{\r\n\r\n    return {__html:text.replace( /#\\S+/g , \"<a href='/tags/$&' style='color:blue'>$&</a>\" )}\r\n    }\r\n    const classes = useStyle()\r\n    return (\r\n\r\n        <div className={classes.TweetItem}>\r\n            <Grid container >\r\n                    <img src={datas.sender.img} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n\r\n              \r\n                <Grid item container direction={\"column\"} style={{flex:1,marginRight:\"1rem\"}}>\r\n                    <Grid item container >\r\n                        <Typography className={classes.TweetItemName}>\r\n                           {datas.sender.name}\r\n                     </Typography>\r\n                        <Typography  className={classes.TweetItemId}>\r\n                        {datas.sender.id}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Typography dangerouslySetInnerHTML={renderTweet(datas.text)} style={{marginTop:\".75rem\",fontSize:\"5px\"}} component={\"p\"} />\r\n                   \r\n\r\n\r\n                     \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }} alignItems={\"center\"}>\r\n                <IconButton>\r\n                    <img src={\"/images/retweet.png\"} className={classes.ButtonImg} />\r\n                </IconButton>\r\n                <IconButton className={classes.favImg}>\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <Typography className={classes.Numbertweet}>{datas.likes}</Typography>\r\n            </Grid>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Tweet;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\HastagTweetList.js",["112","113","114"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport TweetList from '../Home/Components/TweetList';\r\nimport useStyle from './style.js'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Divider } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { getAllTweets } from '../../API/api_tweets';\r\nconst HastagTweetList = (props) => {\r\n    \r\n  const [tweets,setTweets]=useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllTweets((isok,data)=>{\r\n      if(!isok)\r\n      return alert(data.message)\r\n      else setTweets(data)\r\n  })\r\n  },[])\r\n    const classes=useStyle()\r\n    console.log(props);\r\n    return ( \r\n        <>\r\n<div className={classes.root}>\r\n<Header title={props.match.params.hashtag} icon={ <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />}/>\r\n<Divider lassName={classes.divider}/>\r\n\r\n<TweetList data={tweets}/>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default HastagTweetList;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\style.js",["115"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Header\\Header.js",["116"],"import React from 'react';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Typography } from '@material-ui/core';\r\nimport useStyle from '../../pages/Home/style'\r\nconst Header = ({title,icon}) => {\r\n    const classes=useStyle()\r\n    return (  \r\n\r\n        <div className={classes.header}>\r\n            {icon}\r\n            <Typography className={classes.headerTitle}>\r\n               { title}\r\n            </Typography>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Header;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\TweetsByUser\\index.js",["117"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport TweetList from '../Home/Components/TweetList';\r\nimport useStyle from './../Home/style'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { Divider } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { getAllTweets } from '../../API/api_tweets';\r\nconst TweetsByUsers = (props) => {\r\n  const [tweets,setTweets]=useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllTweets((isok,data)=>{\r\n      if(!isok)\r\n      return alert(data.message)\r\n      else setTweets(data)\r\n    })\r\n  },[])\r\n   \r\n      const classes=useStyle()\r\n      console.log(props.match.params.user);\r\n    return (  \r\n\r\n        <>\r\n        <div className={classes.root}>\r\n        <Header title={props.match.params.user} icon={ <PersonIcon />}/>\r\n        <Divider lassName={classes.divider}/>\r\n        \r\n        <TweetList data={tweets}/>\r\n                </div>\r\n                </>\r\n    );\r\n}\r\n \r\nexport default TweetsByUsers;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Page404.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api_tweets.js",["118"],"\r\nimport { FormatListNumberedRtlRounded } from '@material-ui/icons'\r\nimport {getAxiosInstance} from './api'\r\n\r\n\r\nexport const getAllTweets=(callback)=>{\r\n    getAxiosInstance().get(\"/tweets\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\n\r\nexport const getAllHashtags=(callback)=>{\r\n    getAxiosInstance().get(\"/hashtags\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\n\r\nexport const getAllUsers=(callback)=>{\r\n    getAxiosInstance().get(\"/users\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\nexport const newTweetRequest=(data,callback)=>{\r\n    getAxiosInstance().post(\"/tweets\",data)\r\n    .then(res=>{\r\n     \r\n      callback(true)\r\n\r\n    }).catch(err=>{\r\n     \r\n      callback(false)\r\n    })\r\n}","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":28,"column":25,"nodeType":"125","endLine":28,"endColumn":86},{"ruleId":"123","severity":1,"message":"124","line":48,"column":34,"nodeType":"125","endLine":48,"endColumn":89},{"ruleId":"126","severity":1,"message":"127","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":13,"column":9,"nodeType":"125","endLine":13,"endColumn":89},{"ruleId":"123","severity":1,"message":"124","line":37,"column":17,"nodeType":"125","endLine":37,"endColumn":111},{"ruleId":"126","severity":1,"message":"130","line":1,"column":22,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":17,"column":3,"nodeType":"133","messageId":"134","endLine":25,"endColumn":4},{"ruleId":"135","severity":1,"message":"136","line":29,"column":24,"nodeType":"137","messageId":"134","endLine":29,"endColumn":26},{"ruleId":"135","severity":1,"message":"138","line":38,"column":31,"nodeType":"137","messageId":"134","endLine":38,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":116,"column":9,"nodeType":"125","endLine":116,"endColumn":100},{"ruleId":"123","severity":1,"message":"124","line":122,"column":11,"nodeType":"125","endLine":122,"endColumn":70},{"ruleId":"123","severity":1,"message":"124","line":16,"column":21,"nodeType":"125","endLine":16,"endColumn":114},{"ruleId":"123","severity":1,"message":"124","line":38,"column":21,"nodeType":"125","endLine":38,"endColumn":86},{"ruleId":"126","severity":1,"message":"139","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":25,"column":51,"nodeType":"125","endLine":25,"endColumn":106},{"ruleId":"126","severity":1,"message":"130","line":1,"column":22,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"139","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":13},{"ruleId":"126","severity":1,"message":"140","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":38},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'HomeIcon' is defined but never used.","'FormatListNumberedRtlRounded' is defined but never used.","no-global-assign","no-unsafe-negation"]