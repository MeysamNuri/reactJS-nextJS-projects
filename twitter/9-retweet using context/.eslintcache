[{"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js":"2","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js":"4","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js":"5","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js":"7","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js":"8","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js":"9","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js":"10","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js":"11","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js":"12","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js":"13","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js":"14","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\HastagTweetList.js":"15","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\style.js":"16","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Header\\Header.js":"17","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\TweetsByUser\\index.js":"18","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Page404.js":"19","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api_tweets.js":"20","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api.js":"21","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\Auth.js":"22","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\style.js":"23","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\Auth_api.js":"24","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Context\\TweetContext.js":"25"},{"size":523,"mtime":1611349652081,"results":"26","hashOfConfig":"27"},{"size":627,"mtime":1610654844697,"results":"28","hashOfConfig":"27"},{"size":1618,"mtime":1610916106227,"results":"29","hashOfConfig":"27"},{"size":415,"mtime":1610216281450,"results":"30","hashOfConfig":"27"},{"size":390,"mtime":1609706536515,"results":"31","hashOfConfig":"27"},{"size":2304,"mtime":1611303362292,"results":"32","hashOfConfig":"27"},{"size":810,"mtime":1609707885027,"results":"33","hashOfConfig":"27"},{"size":4826,"mtime":1611304326329,"results":"34","hashOfConfig":"27"},{"size":1157,"mtime":1611302685946,"results":"35","hashOfConfig":"27"},{"size":1055,"mtime":1611237185584,"results":"36","hashOfConfig":"27"},{"size":1788,"mtime":1611242272614,"results":"37","hashOfConfig":"27"},{"size":2799,"mtime":1611350543958,"results":"38","hashOfConfig":"27"},{"size":297,"mtime":1609965970963,"results":"39","hashOfConfig":"27"},{"size":2616,"mtime":1611350970080,"results":"40","hashOfConfig":"27"},{"size":975,"mtime":1610731455704,"results":"41","hashOfConfig":"27"},{"size":1632,"mtime":1610217615536,"results":"42","hashOfConfig":"27"},{"size":485,"mtime":1610217839507,"results":"43","hashOfConfig":"27"},{"size":1018,"mtime":1611217517050,"results":"44","hashOfConfig":"27"},{"size":222,"mtime":1610700745278,"results":"45","hashOfConfig":"27"},{"size":1104,"mtime":1611303159756,"results":"46","hashOfConfig":"27"},{"size":485,"mtime":1611176605436,"results":"47","hashOfConfig":"27"},{"size":5107,"mtime":1610916087050,"results":"48","hashOfConfig":"27"},{"size":662,"mtime":1610884250358,"results":"49","hashOfConfig":"27"},{"size":962,"mtime":1611175464811,"results":"50","hashOfConfig":"27"},{"size":1438,"mtime":1611350130618,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"3wgz0z",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js",[],["114","115"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js",["116","117"],"import React, { useEffect, useState } from 'react';\r\nimport useStyle from './style'\r\nimport { ButtonBase, Grid, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllHashtags } from '../../API/api_tweets';\r\n\r\nconst RightSidebar = () => {\r\n    const classes = useStyle()\r\n    const [hashtags,sethashtags]=useState([])\r\n\r\n    useEffect(()=>{\r\n        getAllHashtags((isok,data)=>{\r\n            if(!isok)\r\n            return(\"مشکلی پیش آمده\")\r\n            else sethashtags(data)\r\n        })\r\n    })\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className={classes.root}>\r\n\r\n           <Link to={\"/\"}>\r\n           \r\n           <Grid container direction={\"row\"} alignItems={\"center\"}>\r\n                    <Grid item>\r\n                        <img src={\"/images/Twitter.png\"} style={{ width: \"50px\" }} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component=\"h3\" className={classes.logoText}>\r\n\r\n                            تویتر فارسی\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n           </Link>\r\n                <Typography className={classes.hashtagTitle}>\r\n                    داغ ترین هشتگ ها\r\n                </Typography>\r\n                <Grid container direction={\"column\"} alignItems={\"center\"}  style={{height: \"80%\",\r\n    overflowY: \"scroll\",\r\n    display: \"inline-block\"}}>\r\n\r\n                    {\r\n                        hashtags.map(item=> <ButtonBase className={classes.hashtagparent}>\r\n                           <Link to={\"/hashtags/\"+item.text}>\r\n                           <Grid item container alignItems={\"center\"}>\r\n                                 <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />\r\n                            <Typography className={classes.hashtag}>\r\n                               {item.text}\r\n                            </Typography>\r\n                             </Grid>\r\n                           </Link>\r\n                            </ButtonBase>\r\n                            )\r\n                    }\r\n                  \r\n\r\n                </Grid>\r\n\r\n               \r\n\r\n              \r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RightSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js",["118","119","120","121"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { ButtonBase, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Link } from 'react-router-dom';\r\nimport useStyle from './style.js'\r\nimport { getAllUsers } from '../../API/api_tweets.js';\r\nimport { toast } from 'react-toastify';\r\nimport {UploadImage} from './../../API/Auth_api'\r\nconst TwityerCom = ({ name, id, img }) => {\r\n    const getImage = () => {\r\n  if(img===undefined)\r\n  return \"/images/person.png\"\r\n   else return img     \r\n    }\r\n    const classes = useStyle()\r\n    return <ButtonBase style={{ width: \"100%\" }}><Grid container direction={\"row\"} className={classes.tweeterParent}>\r\n        <img src={getImage()} style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }} />\r\n\r\n        <Grid item container direction={\"column\"} className={classes.TweeterProftext}>\r\n            <Typography className={classes.profName}>{name} </Typography>\r\n            <Typography className={classes.profId}>{id}</Typography>\r\n        </Grid>\r\n        <Divider />\r\n    </Grid>\r\n    </ButtonBase>\r\n}\r\nconst LeftSidebar = () => {\r\n    const [users, setUsers] = useState([])\r\n    const [anchor, setAnchor] = useState(false)\r\n    const [userImage, setUserImage] = useState(null)\r\n    const [ImagePath, setImagePath] = useState()\r\n    const handleMenu = (e) => {\r\n        if (anchor)\r\n            setAnchor(false)\r\n        else\r\n            setAnchor(e.currentTarget)\r\n    }\r\n    useEffect(() => {\r\n        getAllUsers((isok, data) => {\r\n            if (!isok)\r\n                return alert(data.message)\r\n            else setUsers(data)\r\n\r\n        })\r\n    }, [])\r\n    const handleAvatar = (e) => {\r\n        if (e.target.files[0] && e.target.files > 0)\r\n            setUserImage(e.target.files[0])\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            setImagePath(e.target.result)\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n        const form=new FormData()\r\n        form.append(\"image\",e.target.files[0])\r\n        UploadImage(form,(isok,data)=>{\r\n            if(!isok)\r\n            return toast.error(\"خطا به وجود امد\")\r\n             toast.success(\"عکس با موفقیت اپلود شد\")\r\n            localStorage.setItem(\"image\",data.imagePath)\r\n        })\r\n    }\r\n    const getImage = () => {\r\n        if(ImagePath)\r\n        return ImagePath\r\n        if (localStorage.getItem(\"image\") && localStorage.getItem(\"image\") !== \"undefined\")\r\n            return localStorage.getItem(\"image\")\r\n        return \"/images/user-profiles.png\"\r\n    }\r\n    const inputRef = useRef(null)\r\n    const classes = useStyle()\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction={\"row-reverse\"}>\r\n                <img src={getImage()} style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }} />\r\n\r\n                <Grid item container direction={\"column\"} className={classes.userDetail} onClick={handleMenu} style={{ cursor: \"pointer\" }}>\r\n                    <Typography className={classes.profName}> {localStorage.getItem(\"name\")}</Typography>\r\n                    <Typography className={classes.profId}>{localStorage.getItem(\"username\")}</Typography>\r\n                </Grid>\r\n                <input ref={inputRef} type=\"file\" style={{ display: \"none\" }} onChange={handleAvatar} />\r\n            </Grid>\r\n            <Grid item container direction={\"column\"} className={classes.tweeter}>\r\n                <Typography className={classes.tweeterTitle}>\r\n                    بهترین خبرنگاران\r\n                </Typography>\r\n                <Divider />\r\n                {\r\n                    users.map((item, index) => {\r\n                        return (\r\n                            <>\r\n                                <Link to={`/users/${item.name}`}>\r\n                                    <TwityerCom name={item.name} id={item.username} img={item.image} />\r\n                                    {index !== users.length - 1 &&\r\n                                        <Divider />\r\n                                    }\r\n                                </Link>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n                <Menu open={anchor} onClose={e => setAnchor(false)} anchorEl={anchor}>\r\n                    <MenuItem onClick={() => {inputRef.current.click();setAnchor(false)}}>ویرایش عکس پروفایل</MenuItem>\r\n                    <MenuItem onClick={() => { localStorage.clear(); window.location.reload(); }}>خروج</MenuItem>\r\n\r\n                </Menu>\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js",["122"],"import { Divider } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header.js';\r\nimport NewTweet from './Components/NewT.js';\r\nimport TweetList from './Components/TweetList.js';\r\nimport useStyle from './style.js'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport axios from 'axios'\r\nimport { getAllTweets } from '../../API/api_tweets.js';\r\nimport { toast } from 'react-toastify';\r\nconst Home = () => {\r\nconst [tweets,setTweets]=useState([])\r\n\r\nuseEffect(()=>{\r\n  updateTweet()\r\n},[])\r\nconst updateTweet=()=>{\r\n  getAllTweets((isok,data)=>{\r\n    if(!isok)\r\n    return toast.error(\"ناموفق بود\")\r\n    else setTweets(data)\r\n  })\r\n}\r\nconsole.log(tweets);\r\n    const classes=useStyle()\r\n    return ( \r\n\r\n      <>\r\n\r\n<div className={classes.root}>\r\n<Header title={\"خانه\"} icon={<HomeIcon />}/>\r\n<Divider lassName={classes.divider}/>\r\n<NewTweet updateTweet={updateTweet}/>\r\n<TweetList data={tweets}/>\r\n        </div>\r\n  \r\n      </>\r\n     );\r\n}\r\n \r\nexport default Home;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js",["123"],"import { makeStyles, ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst useStyle=makeStyles(them=>({\r\n\r\n    root:{\r\n        backgroundColor:'#eee',\r\n      \r\n    },\r\n    divider:{\r\n        backgroundColor:\"#7ebaff\",\r\n        filter:\"opacity(.8px)\"\r\n    },\r\n    header:{\r\n        backgroundColor:'white',\r\n        display:\"flex\",\r\n        padding:18,\r\n    },\r\n    headerTitle:{\r\n       \r\n     \r\n        marginRight:\"10px\",\r\n        fontWeight:\"600\",\r\n        fontSize:\"20px !important\" \r\n\r\n    },\r\n    NewTwett:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n    },\r\n    TweetItem:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n        marginTop:\".5rem\",\r\n\r\n    },\r\n    TweetItemName:{\r\n        fontSize:\"20px\",\r\nfontWeight:600,\r\nmarginRight:\"10px\"\r\n    },\r\n    favImg:{\r\nborder:\"1px solid\",\r\nmarginBottom: \"15px\",\r\nmarginRight: \"10px\",\r\npadding: \"7px\"\r\n    },\r\n    Numbertweet:{\r\ncolor:them.palette.text.hint,\r\nfontSize:\".4rem\"\r\n    },\r\n    TweetItemId:{\r\n        fontSize:\".9rem\",\r\n        color:them.palette.text.hint,\r\n        marginRight:\"15px\"\r\n\r\n    },\r\n    input:{\r\n        border:\"none\",\r\n        flex:1,\r\n        marginRight:\"1rem\",\r\n        \"&:focus\":{outline:\"none\"}\r\n    },\r\n    ButtonStyle:{\r\n        color:\"white\",\r\n        borderRadius:\"20px\",\r\n        padding:\"20px !important\",\r\n        height:\"30px\",\r\n        lineHeight:\"1rem\",\r\n        fontSize:\"20px\",\r\n        fontFamily:\"Shabnam\"\r\n    },\r\n    ButtonImg:{\r\n        marginTop: \"-14px\"\r\n    },\r\n    Tweetpic:{\r\n       \r\n        width:\"300px\",\r\n        height:\"200px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize:\"contain\"\r\n    }\r\n\r\n}))\r\nexport default useStyle","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js",["124","125","126","127","128"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js",["129","130"],"import { Typography, Grid, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from './../style'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { useTweetDispatch } from '../../../Context/TweetContext';\r\nimport {setTweetText}from './../../../Context/TweetContext'\r\nconst Tweet = ({ datas }) => {\r\n    console.log(datas);\r\n    const tweetDispatch=useTweetDispatch()\r\n    const reTweetClick=()=>{\r\n        setTweetText(tweetDispatch,datas.text)\r\n    }\r\n    const renderTweet = (text) => {\r\n\r\n        return { __html: text.replace(/#\\S+/g, \"<a href='/tags/$&' style='color:blue'>$&</a>\") }\r\n    }\r\n    const classes = useStyle()\r\n    const getImage = () => {\r\n        if (datas.user.image)\r\n            return datas.user.image\r\n        else return '/images/person.png'\r\n    }\r\n    return (\r\n\r\n        <div className={classes.TweetItem}>\r\n            <Grid container >\r\n                <img src={getImage()} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n\r\n\r\n                <Grid item container direction={\"column\"} style={{ flex: 1, marginRight: \"1rem\" }}>\r\n                    <Grid item container >\r\n                        <Typography className={classes.TweetItemName}>\r\n                            {datas.user.name}\r\n                        </Typography>\r\n                        <Typography className={classes.TweetItemId}>\r\n                            {datas.user.id}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Typography dangerouslySetInnerHTML={renderTweet(datas.text)} style={{ marginTop: \".75rem\", fontSize: \"5px\" }} component={\"p\"} />\r\n\r\n\r\n                    {\r\n                        datas.image &&\r\n                        <div style={{ width: \"50%\", textAlign: \"right\", marginTop: \"40px\" }}>\r\n                            <div style={{ backgroundImage: `url(${datas.image})` }} className={classes.Tweetpic}></div>\r\n                        </div>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }} alignItems={\"center\"}>\r\n                <IconButton onClick={reTweetClick}>\r\n                    <img src={\"/images/retweet.png\"} className={classes.ButtonImg} />\r\n                </IconButton>\r\n                <IconButton className={classes.favImg}>\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <Typography className={classes.Numbertweet}>{datas.likes}</Typography>\r\n            </Grid>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Tweet;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\HastagTweetList.js",["131","132","133"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport TweetList from '../Home/Components/TweetList';\r\nimport useStyle from './style.js'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Divider } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { getAllTweets } from '../../API/api_tweets';\r\nconst HastagTweetList = (props) => {\r\n    \r\n  const [tweets,setTweets]=useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllTweets((isok,data)=>{\r\n      if(!isok)\r\n      return alert(data.message)\r\n      else setTweets(data)\r\n  })\r\n  },[])\r\n    const classes=useStyle()\r\n    console.log(props);\r\n    return ( \r\n        <>\r\n<div className={classes.root}>\r\n<Header title={props.match.params.hashtag} icon={ <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />}/>\r\n<Divider lassName={classes.divider}/>\r\n\r\n<TweetList data={tweets}/>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default HastagTweetList;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\style.js",["134"],"import { makeStyles, ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst useStyle=makeStyles(them=>({\r\n\r\n    root:{\r\n        backgroundColor:'#eee',\r\n      \r\n    },\r\n    divider:{\r\n        backgroundColor:\"#7ebaff\",\r\n        filter:\"opacity(.8px)\"\r\n    },\r\n    header:{\r\n        backgroundColor:'white',\r\n        display:\"flex\",\r\n        padding:18,\r\n    },\r\n    headerTitle:{\r\n       \r\n     \r\n        marginRight:\"10px\",\r\n        fontWeight:\"600\",\r\n        fontSize:\"20px !important\" \r\n\r\n    },\r\n    NewTwett:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n    },\r\n    TweetItem:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n        marginTop:\".5rem\",\r\n\r\n    },\r\n    TweetItemName:{\r\n        fontSize:\"20px\",\r\nfontWeight:600,\r\nmarginRight:\"10px\"\r\n    },\r\n    favImg:{\r\nborder:\"1px solid\",\r\nmarginBottom: \"15px\",\r\nmarginRight: \"10px\",\r\npadding: \"7px\"\r\n    },\r\n    Numbertweet:{\r\ncolor:them.palette.text.hint,\r\nfontSize:\".4rem\"\r\n    },\r\n    TweetItemId:{\r\n        fontSize:\".9rem\",\r\n        color:them.palette.text.hint,\r\n        marginRight:\"15px\"\r\n\r\n    },\r\n    input:{\r\n        border:\"none\",\r\n        flex:1,\r\n        marginRight:\"1rem\",\r\n        \"&:focus\":{outline:\"none\"}\r\n    },\r\n    ButtonStyle:{\r\n        color:\"white\",\r\n        borderRadius:\"20px\",\r\n        padding:\"20px !important\",\r\n        height:\"30px\",\r\n        lineHeight:\"1rem\",\r\n        fontSize:\"20px\",\r\n        fontFamily:\"Shabnam\"\r\n    },\r\n    ButtonImg:{\r\n        marginTop: \"-14px\"\r\n    }\r\n\r\n}))\r\nexport default useStyle","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Header\\Header.js",["135"],"import React from 'react';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Typography } from '@material-ui/core';\r\nimport useStyle from '../../pages/Home/style'\r\nconst Header = ({title,icon}) => {\r\n    const classes=useStyle()\r\n    return (  \r\n\r\n        <div className={classes.header}>\r\n            {icon}\r\n            <Typography className={classes.headerTitle}>\r\n               { title}\r\n            </Typography>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Header;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\TweetsByUser\\index.js",["136"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport TweetList from '../Home/Components/TweetList';\r\nimport useStyle from './../Home/style'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { Divider } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { getAllTweets } from '../../API/api_tweets';\r\nconst TweetsByUsers = (props) => {\r\n  const [tweets,setTweets]=useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllTweets((isok,data)=>{\r\n      if(!isok)\r\n      return;\r\n      else setTweets(data)\r\n    })\r\n  },[])\r\n   console.log(tweets);\r\n      const classes=useStyle()\r\n      console.log(props.match.params.user);\r\n    return (  \r\n\r\n        <>\r\n        <div className={classes.root}>\r\n        <Header title={props.match.params.user} icon={ <PersonIcon />}/>\r\n        <Divider lassName={classes.divider}/>\r\n        \r\n        <TweetList data={tweets}/>\r\n                </div>\r\n                </>\r\n    );\r\n}\r\n \r\nexport default TweetsByUsers;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Page404.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api_tweets.js",["137"],"\r\nimport {getAxiosInstance, getAxiosInstanceApi} from './api'\r\n\r\n\r\nexport const getAllTweets=(callback)=>{\r\n  getAxiosInstanceApi().post(\"/getAllTweet\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\n\r\nexport const getAllHashtags=(callback)=>{\r\n  getAxiosInstanceApi().get(\"/getAllHashTags\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\n\r\nexport const getAllUsers=(callback)=>{\r\n  getAxiosInstanceApi().get(\"/getAllUser\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\nexport const newTweetRequest=(data,callback)=>{\r\n  getAxiosInstanceApi().post(\"/newTweet\",data)\r\n    .then(res=>{\r\n     \r\n      const data=res.data\r\n      callback(true,data)\r\n\r\n    }).catch(err=>{\r\n      console.log(err);\r\n      callback(false,err.data.response.message)\r\n    })\r\n}","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\Auth.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\style.js",["138"],"import { makeStyles, ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst useStyle=makeStyles(them=>({\r\n\r\n    container:{\r\n        width: \"30rem\",\r\n        margin: \"5em auto\",\r\n        background: \"white\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        \r\n      \r\n    },\r\n    headerText:{\r\nmargin:\"1rem\",\r\nalignSelf:\"center\",\r\nfontSize: \"22px !important\"\r\n    },\r\n    tab:{\r\n        flex:1,\r\n        fontFamily:\"shabnam !important\"\r\n    },\r\n    loginInput:{\r\n        padding:\"1rem 2rem\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\"\r\n    },\r\n    inputStyle:{\r\n        marginBottom:\"1rem\"\r\n    }\r\n \r\n\r\n}))\r\nexport default useStyle","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\Auth_api.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Context\\TweetContext.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":28,"column":25,"nodeType":"145","endLine":28,"endColumn":86},{"ruleId":"143","severity":1,"message":"144","line":50,"column":34,"nodeType":"145","endLine":50,"endColumn":89},{"ruleId":"146","severity":1,"message":"147","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":19,"column":9,"nodeType":"145","endLine":19,"endColumn":96},{"ruleId":"146","severity":1,"message":"150","line":32,"column":12,"nodeType":"148","messageId":"149","endLine":32,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":77,"column":17,"nodeType":"145","endLine":77,"endColumn":104},{"ruleId":"146","severity":1,"message":"151","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":13},{"ruleId":"146","severity":1,"message":"152","line":1,"column":22,"nodeType":"148","messageId":"149","endLine":1,"endColumn":35},{"ruleId":"146","severity":1,"message":"153","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},{"ruleId":"146","severity":1,"message":"154","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":62,"column":9,"nodeType":"145","endLine":62,"endColumn":96},{"ruleId":"143","severity":1,"message":"144","line":76,"column":11,"nodeType":"145","endLine":76,"endColumn":70},{"ruleId":"143","severity":1,"message":"144","line":27,"column":17,"nodeType":"145","endLine":27,"endColumn":104},{"ruleId":"143","severity":1,"message":"144","line":53,"column":21,"nodeType":"145","endLine":53,"endColumn":86},{"ruleId":"146","severity":1,"message":"155","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":25,"column":51,"nodeType":"145","endLine":25,"endColumn":106},{"ruleId":"146","severity":1,"message":"152","line":1,"column":22,"nodeType":"148","messageId":"149","endLine":1,"endColumn":35},{"ruleId":"146","severity":1,"message":"155","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"146","severity":1,"message":"156","line":2,"column":9,"nodeType":"148","messageId":"149","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"152","line":1,"column":22,"nodeType":"148","messageId":"149","endLine":1,"endColumn":35},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'userImage' is assigned a value but never used.","'axios' is defined but never used.","'ThemeProvider' is defined but never used.","'useEffect' is defined but never used.","'classnames' is defined but never used.","'HomeIcon' is defined but never used.","'getAxiosInstance' is defined but never used.","no-global-assign","no-unsafe-negation"]