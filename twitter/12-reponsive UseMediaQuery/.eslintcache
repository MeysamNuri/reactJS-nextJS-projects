[{"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js":"2","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js":"4","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js":"5","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js":"7","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js":"8","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js":"9","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js":"10","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js":"11","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js":"12","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js":"13","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js":"14","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\HastagTweetList.js":"15","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\style.js":"16","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Header\\Header.js":"17","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\TweetsByUser\\index.js":"18","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Page404.js":"19","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api_tweets.js":"20","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api.js":"21","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\Auth.js":"22","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\style.js":"23","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\Auth_api.js":"24","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Context\\TweetContext.js":"25","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Drawer\\TwitterDrawer.js":"26","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Context\\LayoutContext.js":"27"},{"size":523,"mtime":1611349652081,"results":"28","hashOfConfig":"29"},{"size":1933,"mtime":1611851112814,"results":"30","hashOfConfig":"29"},{"size":1622,"mtime":1611851100075,"results":"31","hashOfConfig":"29"},{"size":669,"mtime":1611775552410,"results":"32","hashOfConfig":"29"},{"size":390,"mtime":1609706536515,"results":"33","hashOfConfig":"29"},{"size":2519,"mtime":1611769874271,"results":"34","hashOfConfig":"29"},{"size":890,"mtime":1611850757776,"results":"35","hashOfConfig":"29"},{"size":4838,"mtime":1611603557903,"results":"36","hashOfConfig":"29"},{"size":1157,"mtime":1611302685946,"results":"37","hashOfConfig":"29"},{"size":1224,"mtime":1611429165586,"results":"38","hashOfConfig":"29"},{"size":1874,"mtime":1611852001106,"results":"39","hashOfConfig":"29"},{"size":2887,"mtime":1611770310303,"results":"40","hashOfConfig":"29"},{"size":307,"mtime":1611427533143,"results":"41","hashOfConfig":"29"},{"size":2987,"mtime":1611430314665,"results":"42","hashOfConfig":"29"},{"size":1342,"mtime":1611769289039,"results":"43","hashOfConfig":"29"},{"size":1632,"mtime":1610217615536,"results":"44","hashOfConfig":"29"},{"size":1011,"mtime":1611851852663,"results":"45","hashOfConfig":"29"},{"size":1501,"mtime":1611604071264,"results":"46","hashOfConfig":"29"},{"size":222,"mtime":1610700745278,"results":"47","hashOfConfig":"29"},{"size":2160,"mtime":1611774641033,"results":"48","hashOfConfig":"29"},{"size":485,"mtime":1611176605436,"results":"49","hashOfConfig":"29"},{"size":5107,"mtime":1610916087050,"results":"50","hashOfConfig":"29"},{"size":662,"mtime":1610884250358,"results":"51","hashOfConfig":"29"},{"size":962,"mtime":1611175464811,"results":"52","hashOfConfig":"29"},{"size":2791,"mtime":1611769817548,"results":"53","hashOfConfig":"29"},{"size":552,"mtime":1611851299389,"results":"54","hashOfConfig":"29"},{"size":1437,"mtime":1611851745788,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"3wgz0z",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\index.js",[],["121","122"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\layout.js",["123"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Layout\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\theme\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\index.js",["124","125","126","127"],"import React, { useEffect, useState } from 'react';\r\nimport useStyle from './style'\r\nimport { ButtonBase, Grid, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllHashtags } from '../../API/api_tweets';\r\nimport { setHashtagList, useTweetDispatch, useTweetState } from '../../Context/TweetContext';\r\n\r\nconst RightSidebar = () => {\r\n    const classes = useStyle()\r\n    // const [hashtags,sethashtags]=useState([])\r\n        const {hashTags:hashtags}=useTweetState()\r\n        const tweetDispatch=useTweetDispatch()\r\n    useEffect(()=>{\r\n        getAllHashtags((isok,data)=>{\r\n            if(!isok)\r\n            return(\"مشکلی پیش آمده\")\r\n            else setHashtagList(tweetDispatch,data)\r\n        })\r\n    },[])\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className={classes.root}>\r\n\r\n           <Link to={\"/\"}>\r\n           \r\n           <Grid container direction={\"row\"} alignItems={\"center\"}>\r\n                    <Grid item>\r\n                        <img src={\"/images/Twitter.png\"} style={{ width: \"50px\" }} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography component=\"h3\" className={classes.logoText}>\r\n\r\n                            تویتر فارسی\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n           </Link>\r\n                <Typography className={classes.hashtagTitle}>\r\n                    داغ ترین هشتگ ها\r\n                </Typography>\r\n                <Grid container direction={\"column\"} alignItems={\"center\"}  style={{height: \"80%\",\r\n    overflowY: \"scroll\",\r\n    display: \"inline-block\"}}>\r\n\r\n                    {\r\n                        hashtags.map(item=> <ButtonBase className={classes.hashtagparent}>\r\n                           <Link to={\"/hashtags/\"+item.text}>\r\n                           <Grid item container alignItems={\"center\"}>\r\n                                 <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />\r\n                            <Typography className={classes.hashtag}>\r\n                               {item.text}\r\n                            </Typography>\r\n                             </Grid>\r\n                           </Link>\r\n                            </ButtonBase>\r\n                            )\r\n                    }\r\n                  \r\n\r\n                </Grid>\r\n\r\n               \r\n\r\n              \r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RightSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\RightSidbar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\LeftSidebar.js",["128","129","130","131"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { ButtonBase, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Link } from 'react-router-dom';\r\nimport useStyle from './style.js'\r\nimport { getAllUsers } from '../../API/api_tweets.js';\r\nimport { toast } from 'react-toastify';\r\nimport {UploadImage} from './../../API/Auth_api'\r\nconst TwityerCom = ({ name, id, img }) => {\r\n    const getImage = () => {\r\n  if(img===undefined)\r\n  return \"/images/person.png\"\r\n   else return img     \r\n    }\r\n    const classes = useStyle()\r\n    return <ButtonBase style={{ width: \"100%\" }}><Grid container direction={\"row\"} className={classes.tweeterParent}>\r\n        <img src={getImage()} style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }} />\r\n\r\n        <Grid item container direction={\"column\"} className={classes.TweeterProftext}>\r\n            <Typography className={classes.profName}>{name} </Typography>\r\n            <Typography className={classes.profId}>{id}</Typography>\r\n        </Grid>\r\n        <Divider />\r\n    </Grid>\r\n    </ButtonBase>\r\n}\r\nconst LeftSidebar = () => {\r\n    const [users, setUsers] = useState([])\r\n    const [anchor, setAnchor] = useState(false)\r\n    const [userImage, setUserImage] = useState(null)\r\n    const [ImagePath, setImagePath] = useState()\r\n    const handleMenu = (e) => {\r\n        if (anchor)\r\n            setAnchor(false)\r\n        else\r\n            setAnchor(e.currentTarget)\r\n    }\r\n    useEffect(() => {\r\n        getAllUsers((isok, data) => {\r\n            if (!isok)\r\n                return alert(data.message)\r\n            else setUsers(data)\r\n\r\n        })\r\n    }, [])\r\n    const handleAvatar = (e) => {\r\n        if (e.target.files[0] && e.target.files > 0)\r\n            setUserImage(e.target.files[0])\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            setImagePath(e.target.result)\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n        const form=new FormData()\r\n        form.append(\"image\",e.target.files[0])\r\n        UploadImage(form,(isok,data)=>{\r\n            if(!isok)\r\n            return toast.error(\"خطا به وجود امد\")\r\n             toast.success(\"عکس با موفقیت اپلود شد\")\r\n            localStorage.setItem(\"image\",data.imagePath)\r\n        })\r\n    }\r\n    const getImage = () => {\r\n        if(ImagePath)\r\n        return ImagePath\r\n        if (localStorage.getItem(\"image\") && localStorage.getItem(\"image\") !== \"undefined\")\r\n            return localStorage.getItem(\"image\")\r\n        return \"/images/user-profiles.png\"\r\n    }\r\n    const inputRef = useRef(null)\r\n    const classes = useStyle()\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction={\"row-reverse\"}>\r\n                <img src={getImage()} style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }} />\r\n\r\n                <Grid item container direction={\"column\"} className={classes.userDetail} onClick={handleMenu} style={{ cursor: \"pointer\" }}>\r\n                    <Typography className={classes.profName}> {localStorage.getItem(\"name\")}</Typography>\r\n                    <Typography className={classes.profId}>{localStorage.getItem(\"username\")}</Typography>\r\n                </Grid>\r\n                <input ref={inputRef} type=\"file\" style={{ display: \"none\" }} onChange={handleAvatar} />\r\n            </Grid>\r\n            <Grid item container direction={\"column\"} className={classes.tweeter}>\r\n                <Typography className={classes.tweeterTitle}>\r\n                    بهترین خبرنگاران\r\n                </Typography>\r\n                <Divider />\r\n                {\r\n                    users.map((item, index) => {\r\n                        return (\r\n                            <>\r\n                                <Link to={`/users/${item._id}/${item.name}`}>\r\n                                    <TwityerCom name={item.name} id={item.username} img={item.image} />\r\n                                    {index !== users.length - 1 &&\r\n                                        <Divider />\r\n                                    }\r\n                                </Link>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n                <Menu open={anchor} onClose={e => setAnchor(false)} anchorEl={anchor}>\r\n                    <MenuItem onClick={() => {inputRef.current.click();setAnchor(false)}}>ویرایش عکس پروفایل</MenuItem>\r\n                    <MenuItem onClick={() => { localStorage.clear(); window.location.reload(); }}>خروج</MenuItem>\r\n\r\n                </Menu>\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\LeftSidebar\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Home.js",["132","133","134"],"import { Divider } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header.js';\r\nimport NewTweet from './Components/NewT.js';\r\nimport TweetList from './Components/TweetList.js';\r\nimport useStyle from './style.js'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport axios from 'axios'\r\nimport { getAllTweets } from '../../API/api_tweets.js';\r\nimport { toast } from 'react-toastify';\r\nimport { setTweetList, useTweetDispatch, useTweetState } from '../../Context/TweetContext.js';\r\nconst Home = () => {\r\n// const [tweets,setTweets]=useState([])\r\nconst {tweetLists:tweets}=useTweetState()\r\nconst dispatch=useTweetDispatch()\r\nuseEffect(()=>{\r\n  updateTweet()\r\n},[])\r\nconst updateTweet=()=>{\r\n  getAllTweets((isok,data)=>{\r\n    if(!isok)\r\n    return toast.error(\"ناموفق بود\")\r\n    else setTweetList(dispatch,data)\r\n  })\r\n}\r\n\r\n    const classes=useStyle()\r\n    return ( \r\n\r\n      <>\r\n\r\n<div className={classes.root}>\r\n<Header title={\"خانه\"} icon={<HomeIcon />}/>\r\n<Divider lassName={classes.divider}/>\r\n<NewTweet updateTweet={updateTweet}/>\r\n\r\n<TweetList data={tweets}/>\r\n        </div>\r\n  \r\n      </>\r\n     );\r\n}\r\n \r\nexport default Home;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\style.js",["135"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\NewT.js",["136","137","138","139","140"],"import { Button, Grid, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport useStyle from './../style'\r\nimport classnames from 'classnames'\r\nimport Axios from 'axios';\r\nimport { newTweetRequest } from '../../../API/api_tweets';\r\nimport { toast } from 'react-toastify';\r\nimport { UpdateHastgLists, useTweetDispatch, useTweetState } from '../../../Context/TweetContext';\r\n\r\nimport {setTweetText as setTweet} from './../../../Context/TweetContext'\r\nconst NewTweet = ( {updateTweet}) => {\r\n  const classes = useStyle()\r\n  // const [Tweet, setTweet] = useState(\"\")\r\n\r\n  const {tweetText:Tweet}=useTweetState()\r\n  const inputFile=useRef(null)\r\n  const [imageFile,setImageFile]=useState(null)\r\n  const [imagePath,setImagePath]=useState(null)\r\nconst tweetDispatch=useTweetDispatch()\r\n  const newTweetHandler=()=>{\r\n    \r\n\r\n    const form=new FormData()\r\n    form.append(\"text\",Tweet)\r\n    if(imageFile)\r\n    form.append(\"image\",imageFile)\r\n    newTweetRequest(form,(isok,data)=>{\r\n      if(!isok)\r\n      return toast.error(data)\r\n     toast.success(\"پیام ارسال شد\")\r\n      updateTweet()\r\n      setTweet(tweetDispatch,\"\")\r\n      setImagePath()\r\n      setImageFile()\r\n      if(Tweet.includes(\"#\"))\r\n      UpdateHastgLists(tweetDispatch)\r\n    })\r\n  }\r\n  const getImage = () => {\r\n  \r\n    if (localStorage.getItem(\"image\") && localStorage.getItem(\"image\") !== \"undefined\")\r\n        return localStorage.getItem(\"image\")\r\n    return \"/images/person.png\"\r\n}\r\nconst selectImage=()=>{\r\n  inputFile.current.click()\r\n}\r\nconst onchangeImage=(e)=>{\r\n  if(e.target.files && e.target.files.length>0)\r\nsetImageFile(e.target.files[0])\r\n\r\nconst reader=new FileReader()\r\nreader.onload=(e)=>{\r\n  setImagePath(e.target.result)\r\n\r\n}\r\nreader.readAsDataURL(e.target.files[0])\r\n\r\n}\r\n  return (\r\n\r\n    <div className={classes.NewTwett}>\r\n      <Grid container>\r\n        <img src={getImage()} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n        <input value={Tweet} onChange={e=>setTweet(tweetDispatch,e.target.value)} className={classes.input} placeholder={\"توییت کن...\"} />\r\n     \r\n      </Grid>\r\n     {\r\n       imagePath &&\r\n       <div style={{width:\"50%\",textAlign:\"right\",marginTop: \"40px\"}}>\r\n       <div style={{ backgroundImage:`url(${imagePath})`}} className={classes.Tweetpic}></div>\r\n     </div>\r\n     }\r\n    <input type=\"file\" style={{display:\"none\"}} ref={inputFile} onChange={onchangeImage}/>\r\n      <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }}>\r\n        <Button onClick={newTweetHandler} variant={\"contained\"} color={\"primary\"} className={classes.ButtonStyle}>توییت</Button>\r\n        <IconButton onClick={selectImage}>\r\n          <img src={\"images/22.png\"} className={classes.ButtonImg} />\r\n        </IconButton>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTweet;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\TweetList.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\Home\\Components\\Tweet.js",["141","142"],"import { Typography, Grid, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyle from './../style'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { setLikeTweet, useTweetDispatch } from '../../../Context/TweetContext';\r\nimport {setTweetText}from './../../../Context/TweetContext'\r\nimport { LikeTweetRequest } from '../../../API/api_tweets';\r\nimport { toast } from 'react-toastify';\r\nconst Tweet = ({ datas }) => {\r\n    console.log(datas);\r\n    const tweetDispatch=useTweetDispatch()\r\n    const reTweetClick=()=>{\r\n        setTweetText(tweetDispatch,datas.text)\r\n    }\r\n    const hanleLike=()=>{\r\n        LikeTweetRequest(datas._id,(isOk,data)=>{\r\n            if(!isOk)\r\n            return toast.error(\"ناموفق بود\")\r\n            setLikeTweet(tweetDispatch,datas._id)\r\n        })\r\n       \r\n    }\r\n    const renderTweet = (text) => {\r\n\r\n        return { __html: text.replace(/#\\S+/g, \"<a href='/tags/$&' style='color:blue'>$&</a>\") }\r\n    }\r\n    const classes = useStyle()\r\n    const getImage = () => {\r\n        if (datas.user.image)\r\n            return datas.user.image\r\n        else return '/images/person.png'\r\n    }\r\n    return (\r\n\r\n        <div className={classes.TweetItem}>\r\n            <Grid container >\r\n                <img src={getImage()} style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }} />\r\n\r\n\r\n                <Grid item container direction={\"column\"} style={{ flex: 1, marginRight: \"1rem\" }}>\r\n                    <Grid item container >\r\n                        <Typography className={classes.TweetItemName}>\r\n                            {datas.user.name}\r\n                        </Typography>\r\n                        <Typography className={classes.TweetItemId}>\r\n                            {datas.user.id}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Typography dangerouslySetInnerHTML={renderTweet(datas.text)} style={{ marginTop: \".75rem\", fontSize: \"5px\" }} component={\"p\"} />\r\n\r\n\r\n                    {\r\n                        datas.image &&\r\n                        <div style={{ width: \"50%\", textAlign: \"right\", marginTop: \"40px\" }}>\r\n                            <div style={{ backgroundImage: `url(${datas.image})` }} className={classes.Tweetpic}></div>\r\n                        </div>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container direction={\"row-reverse\"} style={{ marginTop: \"16px\" }} alignItems={\"center\"}>\r\n                <IconButton onClick={reTweetClick}>\r\n                    <img src={\"/images/retweet.png\"} className={classes.ButtonImg} />\r\n                </IconButton>\r\n                <IconButton className={classes.favImg} onClick={hanleLike}>\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <Typography className={classes.Numbertweet}>{datas.likes}</Typography>\r\n            </Grid>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Tweet;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\HastagTweetList.js",["143","144","145","146","147"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport TweetList from '../Home/Components/TweetList';\r\nimport useStyle from './style.js'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Divider } from '@material-ui/core';\r\nimport {useLocation} from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport { getTweetsByHastagRequest } from '../../API/api_tweets';\r\nimport { useTweetDispatch, useTweetState,setTweetList } from '../../Context/TweetContext';\r\nimport { toast } from 'react-toastify';\r\nconst HastagTweetList = (props) => {\r\n    const location=useLocation()\r\n  // const [tweets,setTweets]=useState([])\r\nconst {tweetLists:tweets}=useTweetState()\r\nconst tweetDispatch=useTweetDispatch()\r\n  useEffect(()=>{\r\n    getTweetsByHastagRequest(props.match.params.hashtag,(isok,data)=>{\r\n      if(!isok)\r\n      return toast.error(data)\r\n      setTweetList(tweetDispatch,data)\r\n     \r\n  })\r\n  },[location])\r\n    const classes=useStyle()\r\n    console.log(props);\r\n    return ( \r\n        <>\r\n<div className={classes.root}>\r\n<Header title={props.match.params.hashtag} icon={ <img src={\"/images/1.png\"} style={{ width: \"50px\" }} />}/>\r\n<Divider lassName={classes.divider}/>\r\n\r\n<TweetList data={tweets}/>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default HastagTweetList;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\HastagTweetList\\style.js",["148"],"import { makeStyles, ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst useStyle=makeStyles(them=>({\r\n\r\n    root:{\r\n        backgroundColor:'#eee',\r\n      \r\n    },\r\n    divider:{\r\n        backgroundColor:\"#7ebaff\",\r\n        filter:\"opacity(.8px)\"\r\n    },\r\n    header:{\r\n        backgroundColor:'white',\r\n        display:\"flex\",\r\n        padding:18,\r\n    },\r\n    headerTitle:{\r\n       \r\n     \r\n        marginRight:\"10px\",\r\n        fontWeight:\"600\",\r\n        fontSize:\"20px !important\" \r\n\r\n    },\r\n    NewTwett:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n    },\r\n    TweetItem:{\r\n        padding:18,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        backgroundColor:'white',\r\n        marginTop:\".5rem\",\r\n\r\n    },\r\n    TweetItemName:{\r\n        fontSize:\"20px\",\r\nfontWeight:600,\r\nmarginRight:\"10px\"\r\n    },\r\n    favImg:{\r\nborder:\"1px solid\",\r\nmarginBottom: \"15px\",\r\nmarginRight: \"10px\",\r\npadding: \"7px\"\r\n    },\r\n    Numbertweet:{\r\ncolor:them.palette.text.hint,\r\nfontSize:\".4rem\"\r\n    },\r\n    TweetItemId:{\r\n        fontSize:\".9rem\",\r\n        color:them.palette.text.hint,\r\n        marginRight:\"15px\"\r\n\r\n    },\r\n    input:{\r\n        border:\"none\",\r\n        flex:1,\r\n        marginRight:\"1rem\",\r\n        \"&:focus\":{outline:\"none\"}\r\n    },\r\n    ButtonStyle:{\r\n        color:\"white\",\r\n        borderRadius:\"20px\",\r\n        padding:\"20px !important\",\r\n        height:\"30px\",\r\n        lineHeight:\"1rem\",\r\n        fontSize:\"20px\",\r\n        fontFamily:\"Shabnam\"\r\n    },\r\n    ButtonImg:{\r\n        marginTop: \"-14px\"\r\n    }\r\n\r\n}))\r\nexport default useStyle","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Header\\Header.js",["149","150"],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\TweetsByUser\\index.js",["151","152","153","154"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../Components/Header/Header';\r\nimport TweetList from '../Home/Components/TweetList';\r\nimport useStyle from './../Home/style'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { Divider, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { getAllTweets, getTweetsByUserRequest } from '../../API/api_tweets';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { setTweetList, useTweetDispatch, useTweetState } from '../../Context/TweetContext';\r\nconst TweetsByUsers = (props) => {\r\n \r\n  const location=useLocation()\r\n  // const [tweets,setTweets]=useState([])\r\nconst {tweetLists:tweets}=useTweetState()\r\nconst tweetDispatch=useTweetDispatch()\r\n\r\n  useEffect(()=>{\r\n    getTweetsByUserRequest(props.match.params.id,(isok,data)=>{\r\n      if(!isok)\r\n      return;\r\n      else setTweetList(tweetDispatch,data)\r\n    })\r\n  },[location])\r\n   console.log(tweets);\r\n      const classes=useStyle()\r\n      console.log(props.match.params.user);\r\n    return (  \r\n\r\n        <>\r\n        <div className={classes.root}>\r\n        <Header title={props.match.params.name} icon={ <PersonIcon />}/>\r\n        <Divider lassName={classes.divider}/>\r\n        {tweets.length ===0 && \r\n        <Typography>این کاربر تویتی تا به حال نداشته</Typography>\r\n        }\r\n        <TweetList data={tweets}/>\r\n                </div>\r\n                </>\r\n    );\r\n}\r\n \r\nexport default TweetsByUsers;","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Page404.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api_tweets.js",["155"],"\r\nimport {getAxiosInstance, getAxiosInstanceApi} from './api'\r\n\r\n\r\nexport const getAllTweets=(callback)=>{\r\n  getAxiosInstanceApi().post(\"/getAllTweet\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\n\r\nexport const getTweetsByHastagRequest=(hashTag,callback)=>{\r\n  getAxiosInstanceApi().post(\"/getAllTweet\",{hashTag})\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\nexport const getTweetsByUserRequest=(user,callback)=>{\r\n  getAxiosInstanceApi().post(\"/getAllTweet\",{user})\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\nexport const getAllHashtags=(callback)=>{\r\n  getAxiosInstanceApi().get(\"/getAllHashTags\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\n\r\nexport const getAllUsers=(callback)=>{\r\n  getAxiosInstanceApi().get(\"/getAllUser\")\r\n    .then(res=>{\r\n      const data=res.data\r\n      callback(true,data)\r\n      \r\n    }).catch((ex)=>{\r\n      console.log(ex);\r\n      callback(false,ex)\r\n    })\r\n}\r\nexport const newTweetRequest=(data,callback)=>{\r\n  getAxiosInstanceApi().post(\"/newTweet\",data)\r\n    .then(res=>{\r\n     \r\n      const data=res.data\r\n      callback(true,data)\r\n\r\n    }).catch(err=>{\r\n      console.log(err);\r\n      callback(false,err.data.response.message)\r\n    })\r\n}\r\nexport const LikeTweetRequest=(id,callback)=>{\r\n  getAxiosInstanceApi().get(\"/likeTweet/\"+id)\r\n    .then(res=>{\r\n     \r\n      const data=res.data\r\n      callback(true,data)\r\n\r\n    }).catch(err=>{\r\n      console.log(err);\r\n      callback(false)\r\n    })\r\n}\r\nexport const GetUserProfile=(callback)=>{\r\n  getAxiosInstanceApi().get(\"/getProfile\")\r\n    .then(res=>{\r\n     \r\n      const data=res.data\r\n      callback(true,data)\r\n\r\n    }).catch(err=>{\r\n      console.log(err);\r\n      callback(false)\r\n    })\r\n}","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\api.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\Auth.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\pages\\auth\\style.js",["156"],"import { makeStyles, ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst useStyle=makeStyles(them=>({\r\n\r\n    container:{\r\n        width: \"30rem\",\r\n        margin: \"5em auto\",\r\n        background: \"white\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        \r\n      \r\n    },\r\n    headerText:{\r\nmargin:\"1rem\",\r\nalignSelf:\"center\",\r\nfontSize: \"22px !important\"\r\n    },\r\n    tab:{\r\n        flex:1,\r\n        fontFamily:\"shabnam !important\"\r\n    },\r\n    loginInput:{\r\n        padding:\"1rem 2rem\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\"\r\n    },\r\n    inputStyle:{\r\n        marginBottom:\"1rem\"\r\n    }\r\n \r\n\r\n}))\r\nexport default useStyle","C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\API\\Auth_api.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Context\\TweetContext.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Components\\Drawer\\TwitterDrawer.js",[],"C:\\Users\\Lenovo\\Desktop\\twiiter-project\\twitter\\src\\Context\\LayoutContext.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":33,"column":6,"nodeType":"163","endLine":33,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"169","line":19,"column":7,"nodeType":"163","endLine":19,"endColumn":9,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":30,"column":25,"nodeType":"173","endLine":30,"endColumn":86},{"ruleId":"171","severity":1,"message":"172","line":52,"column":34,"nodeType":"173","endLine":52,"endColumn":89},{"ruleId":"165","severity":1,"message":"174","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":19,"column":9,"nodeType":"173","endLine":19,"endColumn":96},{"ruleId":"165","severity":1,"message":"175","line":32,"column":12,"nodeType":"167","messageId":"168","endLine":32,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":77,"column":17,"nodeType":"173","endLine":77,"endColumn":104},{"ruleId":"165","severity":1,"message":"166","line":2,"column":28,"nodeType":"167","messageId":"168","endLine":2,"endColumn":36},{"ruleId":"165","severity":1,"message":"176","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":13},{"ruleId":"161","severity":1,"message":"177","line":18,"column":3,"nodeType":"163","endLine":18,"endColumn":5,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"179","line":1,"column":22,"nodeType":"167","messageId":"168","endLine":1,"endColumn":35},{"ruleId":"165","severity":1,"message":"180","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":26},{"ruleId":"165","severity":1,"message":"181","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":18},{"ruleId":"165","severity":1,"message":"174","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":64,"column":9,"nodeType":"173","endLine":64,"endColumn":96},{"ruleId":"171","severity":1,"message":"172","line":78,"column":11,"nodeType":"173","endLine":78,"endColumn":70},{"ruleId":"171","severity":1,"message":"172","line":37,"column":17,"nodeType":"173","endLine":37,"endColumn":104},{"ruleId":"171","severity":1,"message":"172","line":63,"column":21,"nodeType":"173","endLine":63,"endColumn":86},{"ruleId":"165","severity":1,"message":"166","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"182","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":16},{"ruleId":"165","severity":1,"message":"174","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":13},{"ruleId":"161","severity":1,"message":"183","line":24,"column":5,"nodeType":"163","endLine":24,"endColumn":15,"suggestions":"184"},{"ruleId":"171","severity":1,"message":"172","line":30,"column":51,"nodeType":"173","endLine":30,"endColumn":106},{"ruleId":"165","severity":1,"message":"179","line":1,"column":22,"nodeType":"167","messageId":"168","endLine":1,"endColumn":35},{"ruleId":"165","severity":1,"message":"182","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},{"ruleId":"165","severity":1,"message":"185","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"174","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":13},{"ruleId":"165","severity":1,"message":"186","line":8,"column":10,"nodeType":"167","messageId":"168","endLine":8,"endColumn":22},{"ruleId":"161","severity":1,"message":"187","line":24,"column":5,"nodeType":"163","endLine":24,"endColumn":15,"suggestions":"188"},{"ruleId":"165","severity":1,"message":"189","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"179","line":1,"column":22,"nodeType":"167","messageId":"168","endLine":1,"endColumn":35},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["192"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'tweetDispatch'. Either include it or remove the dependency array.",["193"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Axios' is defined but never used.","'userImage' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'updateTweet'. Either include it or remove the dependency array.",["194"],"'ThemeProvider' is defined but never used.","'useEffect' is defined but never used.","'classnames' is defined but never used.","'HomeIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.hashtag' and 'tweetDispatch'. Either include them or remove the dependency array.",["195"],"'toggleDrawer' is assigned a value but never used.","'getAllTweets' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'tweetDispatch'. Either include them or remove the dependency array.",["196"],"'getAxiosInstance' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [history]",{"range":"207","text":"208"},"Update the dependencies array to be: [tweetDispatch]",{"range":"209","text":"210"},"Update the dependencies array to be: [updateTweet]",{"range":"211","text":"212"},"Update the dependencies array to be: [location, props.match.params.hashtag, tweetDispatch]",{"range":"213","text":"214"},"Update the dependencies array to be: [location, props.match.params.id, tweetDispatch]",{"range":"215","text":"216"},[1255,1257],"[history]",[749,751],"[tweetDispatch]",[737,739],"[updateTweet]",[961,971],"[location, props.match.params.hashtag, tweetDispatch]",[934,944],"[location, props.match.params.id, tweetDispatch]"]